@startuml Diagrama de SequÃªncia
!theme plain
skinparam sequenceArrowThickness 2
skinparam roundcorner 20
skinparam maxmessagesize 60

actor "Investidor" as User
participant "API Controller" as API
participant "Create Portfolio\nUse Case" as UC
participant "User Repository" as UR
participant "Portfolio Repository" as PR
participant "Portfolio Aggregate" as PA
participant "Event Bus" as EB
participant "Notification Service" as NS

autonumber

User -> API : POST /portfolios\n{name, description, userId}
activate API

API -> UC : CreatePortfolio(command)
activate UC

UC -> UR : GetById(userId)
activate UR
UR --> UC : User
deactivate UR

alt User not found
    UC --> API : UserNotFound Error
    API --> User : 404 Not Found
else User found
    UC -> PA : Create Portfolio
    activate PA
    note right of PA
        - Validate business rules
        - Generate PortfolioId
        - Set creation date
        - Initialize empty allocations
    end note
    PA --> UC : Portfolio Aggregate
    deactivate PA
    
    UC -> PR : Save(portfolio)
    activate PR
    note right of PR
        Persist to database
    end note
    PR --> UC : Success
    deactivate PR
    
    UC -> EB : Publish(PortfolioCreated)
    activate EB
    note right of EB
        Domain Event
    end note
    EB --> UC : Event Published
    deactivate EB
    
    UC --> API : Portfolio Created
    deactivate UC
    
    API --> User : 201 Created
    deactivate API
    
    EB -> NS : Handle(PortfolioCreated)
    activate NS
    note right of NS
        Create notification
    end note
    NS -> User : ðŸ”” Portfolio created successfully
    NS --> EB : Notification sent
    deactivate NS
end

@enduml