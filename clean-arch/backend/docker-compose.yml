services:
  postgres_clean_invest:
    image: postgres:15-alpine
    container_name: investment_postgres_clean
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: investment_clean_user
      POSTGRES_PASSWORD: investment_clean_password
      POSTGRES_DB: investment_clean_db
    volumes:
      - postgres_data_clean:/var/lib/postgresql/data
    networks:
      - investment_clean_network

  sonarqube:
    image: sonarqube
    expose:
      - 9000
    ports:
      - '127.0.0.1:9000:9000'
    networks:
      - sonarnet
    environment:
        - sonar.jdbc.t
        - sonar.jdbc.url=jdbc:postgresql://db:5432/sonar
        - sonar.jdbc.username=sonar
        - sonar.jdbc.password=sonar
    volumes:
        - sonarqube_conf:/opt/sonarqube/conf
        - sonarqube_data:/opt/sonarqube/data
        - sonarqube_extensions:/opt/sonarqube/extensions
        - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger_clean
    ports:
      - 8081:16686 # Jagger UI
      - 14268:14268
      - 14250:14250

  otel-collector:
    image: otel/opentelemetry-collector:latest
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml
    ports:
      - "1888:1888"   # pprof extension
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # http gRPC receiver
      - "55679:55679" # zpages extension
    depends_on:
      - jaeger
    links:
      - jaeger

volumes:
  postgres_data_clean:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_bundled-plugins:

networks:
  investment_clean_network:
    driver: bridge
  sonarnet: